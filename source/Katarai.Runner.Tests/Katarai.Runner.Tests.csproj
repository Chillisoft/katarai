<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{2AC0E10E-05E8-49B9-A57F-078CD0D9E40B}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Katarai.Runner.Tests</RootNamespace>
    <AssemblyName>Katarai.Runner.Tests</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">..\</SolutionDir>
    <RestorePackages>true</RestorePackages>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="log4net, Version=1.2.15.0, Culture=neutral, PublicKeyToken=669e0ddf0bb1aa2a, processorArchitecture=MSIL">
      <HintPath>..\packages\log4net.2.0.5\lib\net45-full\log4net.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="NSubstitute, Version=1.9.2.0, Culture=neutral, PublicKeyToken=92dd2e9066daa5ca, processorArchitecture=MSIL">
      <HintPath>..\packages\NSubstitute.1.9.2.0\lib\net45\NSubstitute.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="nunit.framework, Version=3.0.5813.39031, Culture=neutral, PublicKeyToken=2638cd05610744eb, processorArchitecture=MSIL">
      <HintPath>..\packages\NUnit.3.0.1\lib\net45\nunit.framework.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <Compile Include="RunnerTests.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="TestFeedbackGenerator.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Katarai.FizzBuzz.Interfaces\Katarai.FizzBuzz.Interfaces.csproj">
      <Project>{eff8d45b-8ef4-4e0b-9357-80c44bbc62bb}</Project>
      <Name>Katarai.FizzBuzz.Interfaces</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <Private>False</Private>
    </ProjectReference>
    <ProjectReference Include="..\Katarai.KataData.FizzBuzz\Katarai.KataData.FizzBuzz.csproj">
      <Project>{89bc0ba2-230b-46f0-8a91-339644d2d4d1}</Project>
      <Name>Katarai.KataData.FizzBuzz</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <Private>False</Private>
    </ProjectReference>
    <ProjectReference Include="..\Katarai.Runner\Katarai.Runner.csproj">
      <Project>{903b1485-b358-4fc7-aa4f-01de68318fb3}</Project>
      <Name>Katarai.Runner</Name>
    </ProjectReference>
    <ProjectReference Include="..\Katarai.Engine\Katarai.Engine.csproj">
      <Project>{84672198-2C10-42D9-850E-8D22E4E9BF71}</Project>
      <Name>Katarai.Engine</Name>
    </ProjectReference>
    <ProjectReference Include="..\SamplePlayerFizzBuzz\SamplePlayerFizzBuzz.csproj">
      <Project>{dcc75b96-d49d-4f02-a21c-40c006c99ad4}</Project>
      <Name>SamplePlayerFizzBuzz</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <Private>False</Private>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>
  <ItemGroup>
    <None Include="Resources\Katarai.FizzBuzz.Interfaces.dll" />
  </ItemGroup>
  <ItemGroup>
    <Service Include="{82A7F48D-3B50-4B1E-B82E-3ADA8210C358}" />
  </ItemGroup>
  <ItemGroup>
    <None Include="Resources\Katarai.KataData.FizzBuzz.dll" />
  </ItemGroup>
  <ItemGroup>
    <None Include="Resources\SamplePlayerFizzBuzz.dll" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Import Project="$(SolutionDir)\.nuget\NuGet.targets" Condition="Exists('$(SolutionDir)\.nuget\NuGet.targets')" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Enable NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('$(SolutionDir)\.nuget\NuGet.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\.nuget\NuGet.targets'))" />
  </Target>
  <!-- Fix for msbuild issue so that the PreBuild event happens after references are built ( http://stackoverflow.com/a/18283144/311292 ) -->
  <Target Name="PreBuildEvent" AfterTargets="" BeforeTargets="" />
  <Target Name="BastardPreBuildEvent" AfterTargets="ResolveReferences" BeforeTargets="CoreResGen">
    <Exec Command="$(PreBuildEvent)" />
  </Target>
  <!-- End of Fix-->
  <PropertyGroup>
    <PreBuildEvent>echo Copying required dlls
xcopy /Y "$(SolutionDir)SamplePlayerFizzBuzz\$(OutDir)SamplePlayerFizzBuzz.dll" "$(ProjectDir)Resources\"
xcopy /Y "$(SolutionDir)Katarai.FizzBuzz.Interfaces\$(OutDir)Katarai.FizzBuzz.Interfaces.dll" "$(ProjectDir)Resources\"
xcopy /Y "$(SolutionDir)Katarai.KataData.FizzBuzz\$(OutDir)Katarai.KataData.FizzBuzz.dll" "$(ProjectDir)Resources\"</PreBuildEvent>
  </PropertyGroup>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>